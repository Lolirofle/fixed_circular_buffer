var searchIndex = {};
searchIndex["fixed_circular_buffer"] = {"doc":"","items":[[3,"CircularBuffer","fixed_circular_buffer","Fixed size circular/cyclic/ring buffer",null,null],[0,"iters","","",null,null],[3,"SavedValues","fixed_circular_buffer::iters","",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get","","",0,null],[11,"next","","",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[6,"Iter","fixed_circular_buffer","",null,null],[6,"IterCircular","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"circularbuffer"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"circularbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"circularbuffer"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"from_raw_parts","","Constructs the structure from its raw components.",1,{"inputs":[{"name":"l"},{"name":"usize"}],"output":{"name":"self"}}],[11,"into_raw_parts","","Deconstructs the structure into its raw components",1,null],[11,"len","","Returns the number of elements (before starting to loop around).",1,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"iter_circular","","Returns an iterator over the buffer looping around at the end. This iterator is initially iterating from the most recently queued element to the oldest, and then looping around (relative to `queue`). This creates a never ending iterator",1,{"inputs":[{"name":"self"}],"output":{"name":"itercircular"}}],[11,"iter","","Returns an iterator over the buffer without looping around. Iterates from the most recently queued element to the oldest queued element (relative to `queue`).",1,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"internal_index","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"get","","Returns a reference to the element at the given index. Smaller indices are more recently queued elements (relative to `queue`) (0 is the newest). When `index` is out of range, it loops around.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"internal_index_reversed","","",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"usize"}}],[11,"swap","","Swaps the most recently queued element.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"queue","","Enqueues (push at beginning) the given element at the beginning of the buffer. Dequeues (pop at end) the last element and returns it.",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"set_first","","Sets the offset for the first element, relative to the currently first element. Smaller indices are more recently queued elements (relative to `queue`) (0 is the newest). When `index` is out of range, it loops around.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"get_mut","","Returns a mutable reference to the element at the given index. Smaller indices are more recently queued elements (relative to `queue`) (0 is the newest). When `index` is out of range, it loops around.",1,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"swap_internal","","Swaps the two elements at the given indices `a` and `b`. Smaller indices are more recently queued elements (relative to `queue`) (0 is the newest). When `a` or `b` are out of range, they loop around.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"usize"}],"output":null}],[11,"swap_at","","Swaps the element at the given index with the specifiied new one. When `a` or `b` are out of range, they loop around.",1,{"inputs":[{"name":"self"},{"name":"usize"},{"name":"t"}],"output":{"name":"t"}}],[11,"queue_reversed","","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"t"}}],[11,"from","","Constructs an already filled circular buffer from the elements in a vec. The first element in the Vec will be interpreted as the most reecntly queued element, and the last element as the oldest.",1,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"l"}],"output":{"name":"self"}}],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}]],"paths":[[3,"SavedValues"],[3,"CircularBuffer"]]};
initSearch(searchIndex);
